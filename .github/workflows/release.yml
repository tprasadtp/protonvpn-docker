name: release
on:
  push:
    tags:
      - "*"
jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Make Variables for Debugging
        run: |
          make show-vars-base
          make show-vars-docker

      - uses: actions/cache@v2
        with:
          path: .trivy
          key: ${{ runner.os }}-trivy-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-trivy-

      - name: Build Image
        run: make docker

      - name: Run Trivy vulnerability scanner
        id: trivy
        uses: aquasecurity/trivy-action@d63413b0a4a4482237085319f7f4a1ce99a8f2ac
        with:
          scan-type: 'image'
          vuln-type: os
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          exit-code: 1
          image-ref: 'ghcr.io/tprasadtp/protonvpn:${{ github.sha }}-dev'
          cache-dir: .trivy

      - name: Correct Trivy cache permissions
        run: sudo chown -R $USER:$GROUP .trivy
        if: always()

  goreleaser:
    needs: [checks]
    permissions:
      contents: write
      repository-projects: write
      packages: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Make Variables for Debugging
        run: |
          make show-vars-base
          make show-vars-docker

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@b953231f81b8dfd023c58e0854a721e35037f28b
        with:
          version: latest
          install-only: true

      - name: Install git-chglog
        run: |
          brew tap git-chglog/git-chglog
          brew install git-chglog
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1

      - name: Generate Release notes
        run: |
          make release-notes
          cat RELEASE_NOTES.md

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        run: make release-prod
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
